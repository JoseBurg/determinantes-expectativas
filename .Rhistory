source("~/.active-rstudio-document", echo=TRUE)
source("~/.active-rstudio-document", echo=TRUE)
databcrd::get_expectativas(modalidad = "eem")
databcrd::get_expectativas(modalidad = "eem") |> filter(variable == "Inflación") |> distinct(horizonte)
databcrd::get_expectativas(modalidad = "eem") |> filter(variable == "Inflacion") |> distinct(horizonte)
databcrd::get_expectativas
data_ms <- read_excel("./data/data.xlsx", sheet = "data_expect") |>
mutate(fecha = as.Date(fecha))
expect_all <- readRDS("data/eem_historico.rds")
expect_all
# 2. Obtener y preparar la serie de inflación esperada (mediana a 12 meses)
expec_mensual_anualizada <- readRDS("data/eem_historico.rds") |>
summarise(
mediana = median(inflacion_mes, na.rm = TRUE),
.by = periodo
)
expec_mensual_anualizada
# 2. Obtener y preparar la serie de inflación esperada (mediana a 12 meses)
expec_mensual_anualizada <- readRDS("data/eem_historico.rds") |>
summarise(
mediana = median(inflacion_mes, na.rm = TRUE) * 12,
.by = periodo
)
expec_mensual_anualizada
# 3. Convertir en serie de tiempo mensual
ts_expec <- ts(expec_mensual_anualizada$mediana, start = c(2009, 6), frequency = 12)
# 4. Ajustar el modelo GARCH
fit <- ugarchfit(spec = spec, data = ts_expec)
# 5. Mostrar resultados
show(fit)
# 6. Graficar la volatilidad condicional
plot(sigma(fit), type = "l", col = "blue",
ylab = "Volatilidad Condicional (σₜ)",
xlab = "Tiempo",
main = "Volatilidad GARCH sobre expectativas de inflación")
# 6. Graficar la volatilidad condicional
plot(sigma(fit), type = "l", col = "blue",
ylab = "Volatilidad Condicional (σₜ)",
xlab = "Tiempo",
main = "Volatilidad GARCH sobre expectativas de inflación")
# 2. Obtener y preparar la serie de inflación esperada (mediana a 12 meses)
expec_mensual_anualizada <- readRDS("data/eem_historico.rds") |>
summarise(
mediana = median(inflacion_mes, na.rm = TRUE),
.by = periodo
)
# 3. Convertir en serie de tiempo mensual
ts_expec <- ts(expec_mensual_anualizada$mediana, start = c(2009, 6), frequency = 12)
# 4. Ajustar el modelo GARCH
fit <- ugarchfit(spec = spec, data = ts_expec)
# 5. Mostrar resultados
show(fit)
# 6. Graficar la volatilidad condicional
plot(sigma(fit), type = "l", col = "blue",
ylab = "Volatilidad Condicional (σₜ)",
xlab = "Tiempo",
main = "Volatilidad GARCH sobre expectativas de inflación")
expec_mensual_anualizada
# 2. Obtener y preparar la serie de inflación esperada (mediana a 12 meses)
mediana_expec <- databcrd::get_expectativas(modalidad = "eem") |>
filter(medida == "Promedio", short_names == "inf_12m") |>
select(fecha, expectativa)
# 3. Convertir en serie de tiempo mensual
ts_expec <- ts(mediana_expec$expectativa, start = c(2009, 6), frequency = 12)
# 4. Ajustar el modelo GARCH
fit <- ugarchfit(spec = spec, data = ts_expec)
# 5. Mostrar resultados
show(fit)
# 6. Graficar la volatilidad condicional
plot(sigma(fit), type = "l", col = "blue",
ylab = "Volatilidad Condicional (σₜ)",
xlab = "Tiempo",
main = "Volatilidad GARCH sobre expectativas de inflación")
# 2. Obtener y preparar la serie de inflación esperada (mediana a 12 meses)
mediana_expec <- databcrd::get_expectativas(modalidad = "eem") |>
filter(medida == "Promedio", short_names == "inf_24m") |>
select(fecha, expectativa)
# 3. Convertir en serie de tiempo mensual
ts_expec <- ts(mediana_expec$expectativa, start = c(2009, 6), frequency = 12)
# 4. Ajustar el modelo GARCH
fit <- ugarchfit(spec = spec, data = ts_expec)
# 4. Ajustar el modelo GARCH
fit <- ugarchfit(spec = spec, data = ts_expec)
# 2. Obtener y preparar la serie de inflación esperada (mediana a 12 meses)
mediana_expec <- databcrd::get_expectativas(modalidad = "eem") |>
filter(medida == "Promedio", short_names == "inf_24m") |>
select(fecha, expectativa)
# 3. Convertir en serie de tiempo mensual
ts_expec <- ts(mediana_expec$expectativa, start = c(2009, 6), frequency = 12)
# 4. Ajustar el modelo GARCH
fit <- ugarchfit(spec = spec, data = ts_expec)
mediana_expec
# 2. Obtener y preparar la serie de inflación esperada (mediana a 12 meses)
mediana_expec <- databcrd::get_expectativas(modalidad = "eem") |>
filter(medida == "Promedio", short_names == "inf_24m") |>
select(fecha, expectativa) |>
na.omit()
mediana_expec
# 3. Convertir en serie de tiempo mensual
ts_expec <- ts(mediana_expec$expectativa, start = c(2016, 8), frequency = 12)
# 4. Ajustar el modelo GARCH
fit <- ugarchfit(spec = spec, data = ts_expec)
# 5. Mostrar resultados
show(fit)
# 6. Graficar la volatilidad condicional
plot(sigma(fit), type = "l", col = "blue",
ylab = "Volatilidad Condicional (σₜ)",
xlab = "Tiempo",
main = "Volatilidad GARCH sobre expectativas de inflación")
# 2. Obtener y preparar la serie de inflación esperada (mediana a 12 meses)
mediana_expec <- databcrd::get_expectativas(modalidad = "eem") |>
filter(medida == "Mediana", short_names == "inf_24m") |>
select(fecha, expectativa) |>
na.omit()
# 3. Convertir en serie de tiempo mensual
ts_expec <- ts(mediana_expec$expectativa, start = c(2016, 8), frequency = 12)
# 4. Ajustar el modelo GARCH
fit <- ugarchfit(spec = spec, data = ts_expec)
# 5. Mostrar resultados
show(fit)
# 6. Graficar la volatilidad condicional
plot(sigma(fit), type = "l", col = "blue",
ylab = "Volatilidad Condicional (σₜ)",
xlab = "Tiempo",
main = "Volatilidad GARCH sobre expectativas de inflación")
readRDS("data/eem_historico.rds") |>
select(periodo, expectativa)
readRDS("data/eem_historico.rds")
library(dplyr)
library(rugarch)
spec <- ugarchspec(
variance.model = list(model = "sGARCH"),
mean.model = list(armaOrder = c(1, 1))
)
# 2. Obtener y preparar la serie de inflación esperada (mediana a 12 meses)
mediana_expec <- databcrd::get_expectativas(modalidad = "eem") |>
filter(medida == "Mediana", short_names == "inf_12m") |>
select(fecha, expectativa)
# 3. Convertir en serie de tiempo mensual
ts_expec <- ts(mediana_expec$expectativa, start = c(2009, 6), frequency = 12)
# 4. Ajustar el modelo GARCH
fit <- ugarchfit(spec = spec, data = ts_expec)
# 5. Mostrar resultados
show(fit)
# 6. Graficar la volatilidad condicional
plot(sigma(fit), type = "l", col = "blue",
ylab = "Volatilidad Condicional (σₜ)",
xlab = "Tiempo",
main = "Volatilidad GARCH sobre expectativas de inflación")
source("work_data.R")
expec_group
expect_all <- readRDS("data/eem_historico.rds")
expect_all
expect_by_group <- expect_all |>
filter(periodo < "2024-12-01") |>
dplyr::select(periodo, grupo, inf_12 = inflacion_interanual)
expect_by_group
# Analisis de comparación de medias ---------------------------------------
library(tidyverse)
library(ggplot2)
library(broom)
library(car)
install.packages("car")
install.packages(emmeans)
install.packages("emmeans")
library(car)
library(emmeans)
expect_all <- readRDS("data/eem_historico.rds")
expect_by_group <- expect_all |>
filter(periodo < "2024-12-01") |>
dplyr::select(periodo, grupo, inf_12 = inflacion_interanual)
expect_by_group <- expect_by_group %>%
mutate(grupo = as.factor(grupo))
expect_by_group <- expect_all |>
filter(periodo < "2024-12-01") |>
dplyr::select(periodo, grupo, inf_12 = inflacion_interanual) |>
mutate(grupo = as.factor(grupo))
modelo_anova <- aov(inf_12 ~ grupo, data = expect_by_group)
mutate(grupo = as.factor(grupo))
modelo_anova <- aov(inf_12 ~ grupo, data = expect_by_group)
summary(modelo_anova)
# Prueba de turkey
tukey_result <- TukeyHSD(modelo_anova)
print(tukey_result)
# Boxplot para comparar la distribución de expectativas
ggplot(expect_by_group, aes(x = grupo, y = inf_12, fill = grupo)) +
geom_boxplot() +
labs(title = "Comparación de expectativas de inflación (12 meses)",
x = "Grupo", y = "Inflación esperada (%)") +
theme_minimal()
# Boxplot para comparar la distribución de expectativas
ggplot(expect_by_group, aes(x = grupo, y = inf_12, fill = grupo)) +
geom_boxplot() +
labs(title = "Comparación de expectativas de inflación (12 meses)",
x = "Grupo", y = "Inflación esperada (%)") +
theme_minimal() +
theme(
legend.position = "none"
)
expect_all |>
filter(periodo < "2024-12-01") |>
dplyr::select(periodo, grupo, inf_12 = inflacion_interanual) |>
dplyr::mutate(
periodo = as.Date(periodo),
grupo = ifelse(
stringr::str_detect(grupo,"Puestos de bolsa|Economistas|Académicos|Empresas|Especial"),
"Otros", grupo),
grupo = stringr::str_to_lower(grupo)) |>
summarise(inf_12 = mean(inf_12, na.rm = TRUE),
.by = c(periodo, grupo))
expect_by_group <- expect_all |>
filter(periodo < "2024-12-01") |>
dplyr::select(periodo, grupo, inf_12 = inflacion_interanual) |>
dplyr::mutate(
periodo = as.Date(periodo),
grupo = ifelse(
stringr::str_detect(grupo,"Puestos de bolsa|Economistas|Académicos|Empresas|Especial"),
"Otros", grupo),
grupo = stringr::str_to_lower(grupo)) |>
summarise(inf_12 = mean(inf_12, na.rm = TRUE),
.by = c(periodo, grupo)) |>
mutate(grupo = as.factor(grupo))
expect_by_group
modelo_anova <- aov(inf_12 ~ grupo, data = expect_by_group)
summary(modelo_anova)
# Prueba de turkey
tukey_result <- TukeyHSD(modelo_anova)
print(tukey_result)
# Boxplot para comparar la distribución de expectativas
ggplot(expect_by_group, aes(x = grupo, y = inf_12, fill = grupo)) +
geom_boxplot() +
labs(title = "Comparación de expectativas de inflación (12 meses)",
x = "Grupo", y = "Inflación esperada (%)") +
theme_minimal() +
theme(
legend.position = "none"
)
library(dplyr)
library(rugarch)
spec <- ugarchspec(
variance.model = list(model = "sGARCH"),
mean.model = list(armaOrder = c(1, 1))
)
# 2. Obtener y preparar la serie de inflación esperada (mediana a 12 meses)
mediana_expec <- databcrd::get_expectativas(modalidad = "eem") |>
filter(medida == "Mediana", short_names == "inf_12m") |>
select(fecha, expectativa)
# 3. Convertir en serie de tiempo mensual
ts_expec <- ts(mediana_expec$expectativa, start = c(2009, 6), frequency = 12)
# 2. Obtener y preparar la serie de inflación esperada (mediana a 12 meses)
mediana_expec <- databcrd::get_expectativas(modalidad = "eem") |>
filter(medida == "Mediana", short_names == "inf_12m") |>
select(fecha, expectativa)
expect_all |>
glimpse()
expect_all |>
summarise(
promedio = mean(inflacion_interanual, na.rm = TRUE),
.by = c(periodo, grupo)
)
expect_all |>
summarise(
promedio = mean(inflacion_interanual, na.rm = TRUE),
.by = c(periodo, grupo)
) |>
ggplot(aes(periodo, promedio)) +
geom_line() +
facet_wrap(~grupo)
expect_by_group
expect_by_group |>
# summarise(
#   promedio = mean(inflacion_interanual, na.rm = TRUE),
#   .by = c(periodo, grupo)
# ) |>
ggplot(aes(periodo, inf_12)) +
geom_line() +
facet_wrap(~grupo)
modelo_anova <- aov(inf_12 ~ grupo, data = expect_by_group)
glimpse()
modelo_anova <- aov(inf_12 ~ grupo, data = expect_by_group)
summary(modelo_anova)
print(tukey_result)
print(tukey_result)
expect_by_group |>
# summarise(
#   promedio = mean(inflacion_interanual, na.rm = TRUE),
#   .by = c(periodo, grupo)
# ) |>
ggplot(aes(periodo, inf_12)) +
geom_line() +
geom_hline(yintercept = 5) +
facet_wrap(~grupo)
expect_by_group |>
# summarise(
#   promedio = mean(inflacion_interanual, na.rm = TRUE),
#   .by = c(periodo, grupo)
# ) |>
ggplot(aes(periodo, inf_12)) +
geom_line() +
geom_hline(yintercept = 5, type = 3) +
geom_hline(yintercept = 3)
expect_by_group |>
# summarise(
#   promedio = mean(inflacion_interanual, na.rm = TRUE),
#   .by = c(periodo, grupo)
# ) |>
ggplot(aes(periodo, inf_12)) +
geom_line() +
geom_hline(yintercept = 5, type = 5) +
geom_hline(yintercept = 3) +
facet_wrap(~grupo)
expect_by_group |>
# summarise(
#   promedio = mean(inflacion_interanual, na.rm = TRUE),
#   .by = c(periodo, grupo)
# ) |>
ggplot(aes(periodo, inf_12)) +
geom_line() +
geom_hline(yintercept = 5, linetype = 5) +
geom_hline(yintercept = 3) +
facet_wrap(~grupo)
expect_by_group |>
# summarise(
#   promedio = mean(inflacion_interanual, na.rm = TRUE),
#   .by = c(periodo, grupo)
# ) |>
ggplot(aes(periodo, inf_12)) +
geom_line() +
geom_hline(yintercept = 5, linetype = 4) +
geom_hline(yintercept = 3) +
facet_wrap(~grupo)
expect_by_group |>
# summarise(
#   promedio = mean(inflacion_interanual, na.rm = TRUE),
#   .by = c(periodo, grupo)
# ) |>
ggplot(aes(periodo, inf_12)) +
geom_line() +
geom_hline(yintercept = 5, linetype = 4) +
geom_hline(yintercept = 3, linetype = 3) +
facet_wrap(~grupo)
expect_by_group |>
# summarise(
#   promedio = mean(inflacion_interanual, na.rm = TRUE),
#   .by = c(periodo, grupo)
# ) |>
ggplot(aes(periodo, inf_12)) +
geom_line() +
geom_hline(yintercept = 5, linetype = 4) +
geom_hline(yintercept = 3, linetype = 2) +
facet_wrap(~grupo)
expect_by_group |>
# summarise(
#   promedio = mean(inflacion_interanual, na.rm = TRUE),
#   .by = c(periodo, grupo)
# ) |>
ggplot(aes(periodo, inf_12)) +
geom_line() +
geom_hline(yintercept = 5, linetype = 2, color = "grey") +
geom_hline(yintercept = 3, linetype = 2, color = "grey") +
facet_wrap(~grupo)
expect_by_group |>
# summarise(
#   promedio = mean(inflacion_interanual, na.rm = TRUE),
#   .by = c(periodo, grupo)
# ) |>
ggplot(aes(periodo, inf_12)) +
geom_line() +
geom_hline(yintercept = 5, linetype = 2, color = "grey") +
geom_hline(yintercept = 3, linetype = 2, color = "grey") +
facet_wrap(~grupo) +
theme(
panel.background = "white"
)
expect_by_group |>
# summarise(
#   promedio = mean(inflacion_interanual, na.rm = TRUE),
#   .by = c(periodo, grupo)
# ) |>
ggplot(aes(periodo, inf_12)) +
geom_line() +
geom_hline(yintercept = 5, linetype = 2, color = "grey") +
geom_hline(yintercept = 3, linetype = 2, color = "grey") +
facet_wrap(~grupo) +
theme(
panel.background = element_blank(color = "white")
)
expect_by_group |>
# summarise(
#   promedio = mean(inflacion_interanual, na.rm = TRUE),
#   .by = c(periodo, grupo)
# ) |>
ggplot(aes(periodo, inf_12)) +
geom_line() +
geom_hline(yintercept = 5, linetype = 2, color = "grey") +
geom_hline(yintercept = 3, linetype = 2, color = "grey") +
facet_wrap(~grupo) +
theme(
panel.background = element_rect(color = "white")
)
databcrd::theme_em
expect_by_group |>
# summarise(
#   promedio = mean(inflacion_interanual, na.rm = TRUE),
#   .by = c(periodo, grupo)
# ) |>
ggplot(aes(periodo, inf_12)) +
geom_line() +
geom_hline(yintercept = 5, linetype = 2, color = "#0466c8") +
geom_hline(yintercept = 3, linetype = 2, color = "#0466c8") +
facet_wrap(~grupo)
expect_by_group |>
# summarise(
#   promedio = mean(inflacion_interanual, na.rm = TRUE),
#   .by = c(periodo, grupo)
# ) |>
ggplot(aes(periodo, inf_12)) +
geom_line() +
geom_hline(yintercept = 5, linetype = 2, color = "#0466c8") +
geom_hline(yintercept = 3, linetype = 2, color = "#0466c8") +
facet_wrap(~grupo) +
theme_classic()
expect_by_group |>
# summarise(
#   promedio = mean(inflacion_interanual, na.rm = TRUE),
#   .by = c(periodo, grupo)
# ) |>
ggplot(aes(periodo, inf_12)) +
geom_line() +
geom_hline(yintercept = 5, linetype = 2, color = "#0466c8") +
geom_hline(yintercept = 3, linetype = 2, color = "#0466c8") +
facet_wrap(~grupo) +
theme_light()
expect_by_group |>
# summarise(
#   promedio = mean(inflacion_interanual, na.rm = TRUE),
#   .by = c(periodo, grupo)
# ) |>
ggplot(aes(periodo, inf_12)) +
geom_line() +
geom_hline(yintercept = 5, linetype = 2, color = "#0466c8") +
geom_hline(yintercept = 3, linetype = 2, color = "#0466c8") +
facet_wrap(~grupo) +
theme_light() +
theme(
panel.grid.major = element_rect(colour = 'grey')
)
expect_by_group |>
# summarise(
#   promedio = mean(inflacion_interanual, na.rm = TRUE),
#   .by = c(periodo, grupo)
# ) |>
ggplot(aes(periodo, inf_12)) +
geom_line() +
geom_hline(yintercept = 5, linetype = 2, color = "#0466c8") +
geom_hline(yintercept = 3, linetype = 2, color = "#0466c8") +
facet_wrap(~grupo) +
theme_light() +
theme(
panel.grid.major = element_rect(colour = 'grey')
)
expect_by_group |>
# summarise(
#   promedio = mean(inflacion_interanual, na.rm = TRUE),
#   .by = c(periodo, grupo)
# ) |>
ggplot(aes(periodo, inf_12)) +
geom_line() +
geom_hline(yintercept = 5, linetype = 2, color = "#0466c8") +
geom_hline(yintercept = 3, linetype = 2, color = "#0466c8") +
facet_wrap(~grupo) +
theme_light() +
theme(
panel.grid.major = element_line(colour = 'grey')
)
expect_by_group |>
# summarise(
#   promedio = mean(inflacion_interanual, na.rm = TRUE),
#   .by = c(periodo, grupo)
# ) |>
ggplot(aes(periodo, inf_12)) +
geom_line() +
geom_hline(yintercept = 5, linetype = 2, color = "#0466c8") +
geom_hline(yintercept = 3, linetype = 2, color = "#0466c8") +
facet_wrap(~grupo) +
theme_light() +
theme(
panel.grid.major = element_line(colour = 'white')
)
expect_by_group |>
# summarise(
#   promedio = mean(inflacion_interanual, na.rm = TRUE),
#   .by = c(periodo, grupo)
# ) |>
ggplot(aes(periodo, inf_12)) +
geom_line() +
geom_hline(yintercept = 5, linetype = 2, color = "#0466c8") +
geom_hline(yintercept = 3, linetype = 2, color = "#0466c8") +
facet_wrap(~grupo) +
theme_light() +
theme(
panel.grid = element_line(colour = 'white')
)
# Boxplot para comparar la distribución de expectativas
ggplot(expect_by_group, aes(x = grupo, y = inf_12, fill = grupo)) +
geom_boxplot() +
labs(title = "Comparación de expectativas de inflación (12 meses)",
x = "Grupo", y = "Inflación esperada (%)") +
theme_minimal() +
theme(
legend.position = "none"
)
