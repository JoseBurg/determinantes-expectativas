names_from = grupo,
values_from = inf_12) |>
janitor::clean_names()
expect_by_group
expect_by_group |>
pivot_wider(
id_cols = periodo,
names_from = grupo,
values_from = inf_12) |>
janitor::clean_names()
data_ms |>
ggplot(aes(
x = dl4_ipc,
y = exp_inf,
color = mas_meta
)) +
geom_point() +  # Puntos coloreados según mas_meta
geom_smooth(method = "lm", se = FALSE, aes(group = mas_meta), size = 0.7) +  # Línea de regresión por categoría
labs(
title = NULL,
x = "Inflación Interanual",
y = "Expectativas de Inflación",
color = "Inflación > Meta"
) +
theme_minimal() +
theme(
legend.position = c(0.2,0.8), #"bottom",
panel.grid.major = element_line(color = "gray", linetype = 3, size = 0.1),
panel.grid.minor = element_line(color = "gray", linetype = 3, size = 0.1),
axis.text = element_text(size = 7),  # Tamaño del texto de los ejes
axis.title = element_text(size = 7),  # Tamaño del texto de los títulos de los ejes
strip.text = element_text(size = 7),  # Tamaño del texto en los paneles
legend.text = element_text(size = 7),  # Tamaño del texto de la leyenda
panel.border = element_rect(color = NA, fill = NA, size = 0.1),
legend.title = element_blank(),                   # Elimina el título de la leyenda
legend.background = element_blank()              # Elimina el fondo/borde de la leyenda
)
expect_by_group |>
pivot_wider(
id_cols = periodo,
names_from = grupo,
values_from = inf_12) |>
janitor::clean_names()
# Funciones de impulsos respuestas de las expectativas --------------------
library(tidyverse)
library(vars)
library(lmtest)
library(gt)
library(sandwich)
library(tseries)
library(forecast)
library(readxl)  # Para leer Excel
# Cargar datos y unir -----------------------------------------------------
data_ms <- read_excel("./data/data.xlsx", sheet = "data_expect")
data_infl <- data_ms |>
mutate(dl4_ipc = 100 * (IPC / dplyr::lag(IPC,12) - 1),
dev_pos = pmax(dl4_ipc - meta, 0),
dev_neg = pmax(meta - dl4_ipc, 0),
mas_meta = factor(dl4_ipc > meta)) |>
filter(!is.na(dl4_ipc), fecha >= "2009-05-01")
expect_by_group <-read_excel("./data/expectativas_inflacion_grupo.xlsx") |>
dplyr::select(periodo, grupo, inf_12) |>
dplyr::mutate(
periodo = as.Date(periodo),
grupo = ifelse(
stringr::str_detect(grupo,"Puestos de bolsa|Economistas|Académicos"),
"Otros", grupo),
grupo = stringr::str_to_lower(grupo)) |>
summarise(inf_12 = mean(inf_12, na.rm = TRUE),
.by = c(periodo, grupo)) |>
pivot_wider(
id_cols = periodo,
names_from = grupo,
values_from = inf_12
) |> janitor::clean_names()
datos_exp_infl <- data_infl |>
left_join(expect_by_group, by = c("fecha" = "periodo"))
datos_exp_infl
impulso_respuestas <- function(data, var_impulso, var_reponse, ahead = 15){
# Convertir data a serie de tiempo
ts_data <- ts(data |>
dplyr::select(all_of(var_impulso), all_of(var_reponse)) |>
tidyr::drop_na(),
start = c(min(lubridate::year(data$fecha)), 1), frequency = 12)
# Data en primera diferencia
ts_data_diff <- diff(ts_data)
# Modelo var
# Selección de rezagos optimos
lag_selection <- vars::VARselect(ts_data_diff, lag.max = 10, type = "const")
optimal_lag <- lag_selection$selection["AIC(n)"]
var_model <- vars::VAR(ts_data_diff, p = optimal_lag, type = "const")
irf_object <- vars::irf(var_model, impulse = var_impulso, response = var_reponse, n.ahead = ahead, boot = TRUE)
# Convertir datos de series de tiempo a data.frame:
data <-  data.frame(
periodo = 1:length(irf_object$irf[[var_impulso]]),
impulso = as.numeric(irf_object$irf[[var_impulso]]),
lower = as.numeric(irf_object$Lower[[var_impulso]]),
upper = as.numeric(irf_object$Upper[[var_impulso]])) |>
tidyr::drop_na()
# Gráfico
data |>
ggplot2::ggplot(ggplot2::aes(x = periodo, y = impulso)) +
ggplot2::geom_line(color = "black", size = 1) +
ggplot2::geom_ribbon(ggplot2::aes(ymin = lower, ymax = upper), fill = "gray50", alpha = 0.2) +
ggplot2::geom_hline(yintercept = 0, linetype = "dashed", color = "red") +
ggplot2::labs(
title = paste0("Impacto de ", var_impulso, " en las expectativas \n a 12 meses ", var_reponse),
x = "Meses", y = "Impacto en Exp. Inflación") +
theme_em()
}
# Modelo de asimetría  ------------------------------------------
modelo_asimetria <- function(data, variable){
checkmate::check_choice(variable, c("exp_inf", "otros"))
infl_expectativas <- data.frame(
meta = data[["meta"]],
expectativas = data[[variable]],
inflacion = data[["dl4_ipc"]]) |>
tibble::as_tibble()
desviaciones <- infl_expectativas |>
dplyr::mutate(
dev_pos = pmax(inflacion - meta, 0),
dev_neg = pmax(meta - inflacion, 0)) |>
tidyr::drop_na()
modelo <- lm(expectativas ~ dev_pos + dev_neg, data = desviaciones)
stargazer::stargazer(modelo, type = "text")
}
# Analisis  ---------------------------------------------------------------
modelo_asimetria(data = datos_exp_infl, variable = "exp_inf") # Expectativa general
modelo_asimetria(data = datos_exp_infl, variable = "bancos")  # Bancos
modelo_asimetria(data = datos_exp_infl, variable = "organismos_multilaterales")
modelo_asimetria(data = datos_exp_infl, variable = "consultores")
modelo_asimetria(data = datos_exp_infl, variable = "otros")
df %>%
gt() %>%
tab_header(
title = "Modelo de asimetría",
subtitle = md("$expectativas = \\beta_0 + \\beta_1 dev\\_pos + \\beta_2 dev\\_neg + \\varepsilon$")) %>%
fmt_number(
columns = c(dev_pos, dev_neg, Constant, R2, Adjusted_R2, Residual_Std_Error, F_Statistic),
decimals = 2
) %>%
cols_label(
Variable = "Tipo",
dev_pos = "dev_pos",
dev_neg = "dev_neg",
Constant = "Constante",
R2 = "R²",
Adjusted_R2 = "R² Aj",
Residual_Std_Error = "Error Std",
F_Statistic = "F Statistic"
) %>%
tab_options(
table.width = pct(100),
column_labels.font.weight = "bold"
)
# Analisis  ---------------------------------------------------------------
modelo_asimetria(data = datos_exp_infl, variable = "exp_inf") # Expectativa general
modelo_asimetria(data = datos_exp_infl, variable = "bancos")  # Bancos
modelo_asimetria(data = datos_exp_infl, variable = "organismos_multilaterales")
modelo_asimetria(data = datos_exp_infl, variable = "consultores")
modelo_asimetria(data = datos_exp_infl, variable = "otros")
datos_exp_infl
datos_exp_infl
datos_exp_infl |>
filter(dl4_ipc < mean(dl4_ipc, na.rm = TRUE)
datos_exp_infl |>
datos_exp_infl
datos_exp_infl |>
filter(dl4_ipc < mean(dl4_ipc, na.rm = TRUE))
# Alta inflación
modelo_asimetria(data = datos_exp_infl |> filter(dl4_ipc > mean(dl4_ipc, na.rm = TRUE)), variable = "exp_inf") # Expectativa general
modelo_asimetria(data = datos_exp_infl |> filter(dl4_ipc > mean(dl4_ipc, na.rm = TRUE)), variable = "bancos")  # Bancos
# General
modelo_asimetria(data = datos_exp_infl, variable = "exp_inf") # Expectativa general
modelo_asimetria(data = datos_exp_infl, variable = "bancos")  # Bancos
modelo_asimetria(data = datos_exp_infl, variable = "organismos_multilaterales")
modelo_asimetria(data = datos_exp_infl, variable = "consultores")
modelo_asimetria(data = datos_exp_infl, variable = "otros")
# Alta inflación
modelo_asimetria(data = datos_exp_infl |> filter(dl4_ipc > mean(dl4_ipc, na.rm = TRUE)), variable = "exp_inf") # Expectativa general
modelo_asimetria(data = datos_exp_infl |> filter(dl4_ipc > mean(dl4_ipc, na.rm = TRUE)), variable = "bancos")  # Bancos
modelo_asimetria(data = datos_exp_infl |> filter(dl4_ipc > mean(dl4_ipc, na.rm = TRUE)), variable = "organismos_multilaterales")
modelo_asimetria(data = datos_exp_infl |> filter(dl4_ipc > mean(dl4_ipc, na.rm = TRUE)), variable = "consultores")
modelo_asimetria(data = datos_exp_infl |> filter(dl4_ipc > mean(dl4_ipc, na.rm = TRUE)), variable = "otros")
# Baja inflación
modelo_asimetria(data = datos_exp_infl |> filter(dl4_ipc < mean(dl4_ipc, na.rm = TRUE)), variable = "exp_inf") # Expectativa general
modelo_asimetria(data = datos_exp_infl |> filter(dl4_ipc < mean(dl4_ipc, na.rm = TRUE)), variable = "bancos")  # Bancos
modelo_asimetria(data = datos_exp_infl |> filter(dl4_ipc < mean(dl4_ipc, na.rm = TRUE)), variable = "organismos_multilaterales")
modelo_asimetria(data = datos_exp_infl |> filter(dl4_ipc < mean(dl4_ipc, na.rm = TRUE)), variable = "consultores")
modelo_asimetria(data = datos_exp_infl |> filter(dl4_ipc < mean(dl4_ipc, na.rm = TRUE)), variable = "otros")
list_variable <- list()
# General
mod <- modelo_asimetria(data = datos_exp_infl, variable = "exp_inf") # Expectativa general
# Modelo de asimetría  ------------------------------------------
modelo_asimetria <- function(data, variable){
checkmate::check_choice(variable, c("exp_inf", "otros"))
infl_expectativas <- data.frame(
meta = data[["meta"]],
expectativas = data[[variable]],
inflacion = data[["dl4_ipc"]]) |>
tibble::as_tibble()
desviaciones <- infl_expectativas |>
dplyr::mutate(
dev_pos = pmax(inflacion - meta, 0),
dev_neg = pmax(meta - inflacion, 0)) |>
tidyr::drop_na()
modelo <- lm(expectativas ~ dev_pos + dev_neg, data = desviaciones)
modelo
}
# General
mod <- modelo_asimetria(data = datos_exp_infl, variable = "exp_inf") # Expectativa general
mod
mod$coefficients
mod$coefficients[2]
for (i in tipo_inflacion) {
modelo_general <- modelo_asimetria(data = datos_exp_infl, variable = i)
list_variable[[tipo_inflacion]] <- modelo_general
}
tipo_inflacion <- c("exp_inf", "bancos", "organismos_multilaterales", "consultores", "otros")
list_variable <- list()
for (i in tipo_inflacion) {
modelo_general <- modelo_asimetria(data = datos_exp_infl, variable = i)
list_variable[[tipo_inflacion]] <- modelo_general
}
for (i in tipo_inflacion) {
modelo_general <- modelo_asimetria(data = datos_exp_infl, variable = i)
list_variable[tipo_inflacion] <- modelo_general
}
list_variable
tipo_inflacion <- c("exp_inf", "bancos", "organismos_multilaterales", "consultores", "otros")
list_variable <- list()
for (i in tipo_inflacion) {
modelo_general <- modelo_asimetria(data = datos_exp_infl, variable = i)
list_variable[tipo_inflacion] <- modelo_general$coefficients
}
list_variable
tipo_inflacion <- c("exp_inf", "bancos", "organismos_multilaterales", "consultores", "otros")
list_variable <- list()
for (i in tipo_inflacion) {
modelo_general <- modelo_asimetria(data = datos_exp_infl, variable = i)
list_variable[tipo_inflacion] <- modelo_general$coefficients[1]
}
list_variable
tipo_inflacion <- c("exp_inf", "bancos", "organismos_multilaterales", "consultores", "otros")
list_variable <- list()
for (i in tipo_inflacion) {
modelo_general <- modelo_asimetria(data = datos_exp_infl, variable = i)
list_variable[i] <- modelo_general$coefficients[1]
}
list_variable
tipo_inflacion <- c("exp_inf", "bancos", "organismos_multilaterales", "consultores", "otros")
list_variable <- list()
for (i in tipo_inflacion) {
modelo_general <- modelo_asimetria(data = datos_exp_infl, variable = i)
list_variable[[i]] <- modelo_general$coefficients[1]
}
list_variable
for (i in tipo_inflacion) {
modelo_general <- modelo_asimetria(data = datos_exp_infl, variable = i)
list_variable[[i]] <- modelo_general$coefficients
}
tipo_inflacion <- c("exp_inf", "bancos", "organismos_multilaterales", "consultores", "otros")
list_variable <- list()
for (i in tipo_inflacion) {
modelo_general <- modelo_asimetria(data = datos_exp_infl, variable = i)
list_variable[[i]] <- modelo_general$coefficients
}
list_variable
mod$qr$qr
mod
summary(mod)
mod$df.residual
mod$qr
mod$df.residual
summary(mod)
mod$qr$qr
mod$qr
summary(mod)$r.squared
for (i in tipo_inflacion) {
modelo_general <- modelo_asimetria(data = datos_exp_infl, variable = i)
list_variable[[i]] <- list(modelo_general$coefficients, summary(modelo_general)$r.squared)
}
list_variable
summary(mod)$r.squared
tipo_inflacion <- c("exp_inf", "bancos", "organismos_multilaterales", "consultores", "otros")
list_variable <- list()
for (i in tipo_inflacion) {
modelo_general <- modelo_asimetria(data = datos_exp_infl, variable = i)
list_variable[[i]] <- list(coeficientes = modelo_general$coefficients, rsuared = summary(modelo_general)$r.squared)
}
list_variable
# General
modelo_asimetria(data = datos_exp_infl, variable = "exp_inf") # Expectativa general
summary(modelo_asimetria(data = datos_exp_infl, variable = "exp_inf"))
mod$coefficients[-1]
tipo_inflacion <- c("exp_inf", "bancos", "organismos_multilaterales", "consultores", "otros")
list_variable <- list()
for (i in tipo_inflacion) {
modelo_general <- modelo_asimetria(data = datos_exp_infl, variable = i)
list_variable[[i]] <- c(modelo_general$coefficients[-1], rsuared = summary(modelo_general)$r.squared)
}
list_variable
tipo_inflacion <- c("exp_inf", "bancos", "organismos_multilaterales", "consultores", "otros")
list_variable <- list()
for (i in tipo_inflacion) {
modelo_general <- modelo_asimetria(data = datos_exp_infl, variable = i)
list_variable[i] <- c(modelo_general$coefficients[-1], rsuared = summary(modelo_general)$r.squared)
}
list_variable
tipo_inflacion <- c("exp_inf", "bancos", "organismos_multilaterales", "consultores", "otros")
list_variable <- list()
for (i in tipo_inflacion) {
modelo_general <- modelo_asimetria(data = datos_exp_infl, variable = i)
list_variable[[i]] <- c(modelo_general$coefficients[-1], rsuared = summary(modelo_general)$r.squared)
}
list_variable
tipo_inflacion <- c("exp_inf", "bancos", "organismos_multilaterales", "consultores", "otros")
estimacion_inflacion_general <- list()
for (i in tipo_inflacion) {
modelo_general <- modelo_asimetria(data = datos_exp_infl, variable = i)
estimacion_inflacion_general[[i]] <- c(modelo_general$coefficients[-1], rsuared = summary(modelo_general)$r.squared)
}
estimacion_inflacion_general
estimacion_infl_alt <- list()
for (i in tipo_inflacion) {
modelo_general <- modelo_asimetria(data = datos_exp_infl|> filter(dl4_ipc > mean(dl4_ipc, na.rm = TRUE)), variable = i)
estimacion_infl_alt[[i]] <- c(modelo_general$coefficients[-1], rsuared = summary(modelo_general)$r.squared)
}
estimacion_infl_alt
estimacion_infl_baja <- list()
for (i in tipo_inflacion) {
modelo_general <- modelo_asimetria(data = datos_exp_infl|> filter(dl4_ipc > mean(dl4_ipc, na.rm = TRUE)), variable = i)
estimacion_infl_baja[[i]] <- c(modelo_general$coefficients[-1], rsuared = summary(modelo_general)$r.squared)
}
regresiones <- list(
inflacion_general = estimacion_inflacion_general,
inflacion_alta = estimacion_infl_alt,
inflacion_baja = estimacion_infl_baja
)
regresiones
tipo_inflacion
datos_exp_infl
# Estadisticos descriptivos
datos_exp_infl["exp_inf"]
for (i in tipo_inflacion) {
medidas <- list(
mediana = median(datos_exp_infl[i], na.rm = TRUE),
media = median(datos_exp_infl[i], na.rm = TRUE),
varianza = var(datos_exp_infl[i], na.rm = TRUE),
coeficiente_cor = cor(datos_exp_infl["dl4_ipc"], datos_exp_infl[i], na.rm = TRUE)
)
}
for (i in tipo_inflacion) {
medidas <- list(
mediana = median(datos_exp_infl[i], na.rm = TRUE),
media = median(datos_exp_infl[i], na.rm = TRUE),
varianza = var(datos_exp_infl[i], na.rm = TRUE),
coeficiente_cor = cor(datos_exp_infl["dl4_ipc"], datos_exp_infl[i], na.rm = TRUE)
)
}
# Estadisticos descriptivos
datos_exp_infl["exp_inf"]
estadisticos <- list()
for (i in tipo_inflacion) {
medidas <- list(
mediana = median(datos_exp_infl[i], na.rm = TRUE),
media = median(datos_exp_infl[i], na.rm = TRUE),
varianza = var(datos_exp_infl[i], na.rm = TRUE),
coeficiente_cor = cor(datos_exp_infl["dl4_ipc"], datos_exp_infl[i], na.rm = TRUE)
)
}
for (i in tipo_inflacion) {
medidas <- list(
mediana = median(datos_exp_infl[i], na.rm = TRUE),
media = median(datos_exp_infl[i], na.rm = TRUE),
varianza = var(datos_exp_infl[i], na.rm = TRUE),
coeficiente_cor = cor(datos_exp_infl["dl4_ipc"], datos_exp_infl[i], na.rm = TRUE)
)
estadisticos[[i]] <- medidas
}
for (i in tipo_inflacion) {
medidas <- list(
mediana = median(datos_exp_infl[i], na.rm = TRUE),
media = median(datos_exp_infl[i], na.rm = TRUE),
varianza = var(datos_exp_infl[i], na.rm = TRUE),
coeficiente_cor = cor(datos_exp_infl["dl4_ipc"], datos_exp_infl[i], na.rm = TRUE)
)
estadisticos[[i]] <- medidas
}
for (i in tipo_inflacion) {
medidas <- data.frame(
mediana = median(datos_exp_infl[i], na.rm = TRUE),
media = median(datos_exp_infl[i], na.rm = TRUE),
varianza = var(datos_exp_infl[i], na.rm = TRUE),
coeficiente_cor = cor(datos_exp_infl["dl4_ipc"], datos_exp_infl[i], na.rm = TRUE)
)
estadisticos[[i]] <- medidas
}
datos_exp_infl[i]
tipo_inflacion
datos_exp_infl[exp_inf]
datos_exp_infl["exp_inf"]
tipo_inflacion[1]
tipo_inflacion[[1]]
pull(tipo_inflacion[1])
mean(datos_exp_infl["exp_inf"])
mean(datos_exp_infl["exp_inf"], na.rm = TRUE)
mean(datos_exp_infl[["exp_inf"]], na.rm = TRUE)
estadisticos <- list()
for (i in tipo_inflacion) {
medidas <- data.frame(
mediana = median(datos_exp_infl[[i]], na.rm = TRUE),
media = mean(datos_exp_infl[[i]], na.rm = TRUE),
varianza = var(datos_exp_infl[[i]], na.rm = TRUE),
coeficiente_cor = cor(datos_exp_infl[["dl4_ipc"]], datos_exp_infl[[i]], na.rm = TRUE)
)
estadisticos[[i]] <- medidas
}
for (i in tipo_inflacion) {
medidas <- data.frame(
mediana = median(datos_exp_infl[[i]], na.rm = TRUE),
media = mean(datos_exp_infl[[i]], na.rm = TRUE),
varianza = var(datos_exp_infl[[i]], na.rm = TRUE),
coeficiente_cor = cor(datos_exp_infl[["dl4_ipc"]], datos_exp_infl[[i]])
)
estadisticos[[i]] <- medidas
}
estadisticos
is.na(datos_exp_infl['exp_inf'])
!is.na(datos_exp_infl[['exp_inf']])
datos_exp_infl[['exp_inf']]
datos_exp_infl[['dl4_ipc']]
medidas <- data.frame(
mediana = median(datos_exp_infl[[i]], na.rm = TRUE),
media = mean(datos_exp_infl[[i]], na.rm = TRUE),
varianza = var(datos_exp_infl[[i]], na.rm = TRUE),
coeficiente_cor = cor(datos_exp_infl[["dl4_ipc"]], datos_exp_infl[[i]])
)
for (i in tipo_inflacion) {
medidas <- data.frame(
mediana = median(datos_exp_infl[[i]], na.rm = TRUE),
media = mean(datos_exp_infl[[i]], na.rm = TRUE),
varianza = var(datos_exp_infl[[i]], na.rm = TRUE),
coeficiente_cor = cor(datos_exp_infl[["dl4_ipc"]], datos_exp_infl[[i]])
)
estadisticos[[i]] <- medidas
}
estadisticos
for (i in tipo_inflacion) {
medidas <- data.frame(
mediana = median(datos_exp_infl[[i]], na.rm = TRUE),
media = mean(datos_exp_infl[[i]], na.rm = TRUE),
varianza = var(datos_exp_infl[[i]], na.rm = TRUE),
coeficiente_cor = cor(datos_exp_infl[["dl4_ipc"]], datos_exp_infl[[i]], use = "complete.obs")
)
estadisticos[[i]] <- medidas
}
estadisticos
# Estadisticos descriptivos
data <- datos_exp_infl
# Estadisticos descriptivos
data <- datos_exp_infl
data_alta_inflacion <- datos_exp_infl|> filter(dl4_ipc > mean(dl4_ipc, na.rm = TRUE))
data_baja_inflacion <- datos_exp_infl|> filter(dl4_ipc < mean(dl4_ipc, na.rm = TRUE))
estadisticos_general <- list()
# Estadisticos descriptivos
data_general <- datos_exp_infl
for (i in tipo_inflacion) {
data <-  data_general
medidas <- data.frame(
mediana = median(data[[i]], na.rm = TRUE),
media = mean(data[[i]], na.rm = TRUE),
varianza = var(data[[i]], na.rm = TRUE),
coeficiente_cor = cor(data[["dl4_ipc"]], data[[i]], use = "complete.obs")
)
estadisticos_general[[i]] <- medidas
}
estadisticos_general
estadisticos_alt_inf <- list()
estadisticos_alt_inf <- list()
for (i in tipo_inflacion) {
data <-  data_alta_inflacion
medidas <- data.frame(
mediana = median(data[[i]], na.rm = TRUE),
media = mean(data[[i]], na.rm = TRUE),
varianza = var(data[[i]], na.rm = TRUE),
coeficiente_cor = cor(data[["dl4_ipc"]], data[[i]], use = "complete.obs")
)
estadisticos_alt_inf[[i]] <- medidas
}
estadisticos_baj_inf <- list()
estadisticos_baj_inf <- list()
for (i in tipo_inflacion) {
data <-  data_baja_inflacion
medidas <- data.frame(
mediana = median(data[[i]], na.rm = TRUE),
media = mean(data[[i]], na.rm = TRUE),
varianza = var(data[[i]], na.rm = TRUE),
coeficiente_cor = cor(data[["dl4_ipc"]], data[[i]], use = "complete.obs")
)
estadisticos_baj_inf[[i]] <- medidas
}
estadisticos_baj_inf
estadisticos_alt_inf
todos_escenarios <- list(
general = estadisticos_general,
alta = estadisticos_alt_inf,
baja = estadisticos_baj_inf
)
todos_escenarios
purrr::reduce(todos_escenarios, full_join)
purrr::reduce(todos_escenarios, cbind)
